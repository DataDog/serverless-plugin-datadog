{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "PythonHello27LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/dd-sls-plugin-integration-test-dev-PythonHello27"
      }
    },
    "PythonHello36LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/dd-sls-plugin-integration-test-dev-PythonHello36"
      }
    },
    "PythonHello37LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/dd-sls-plugin-integration-test-dev-PythonHello37"
      }
    },
    "PythonHello38LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/dd-sls-plugin-integration-test-dev-PythonHello38"
      }
    },
    "JavascriptHello10DashxLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/dd-sls-plugin-integration-test-dev-JavascriptHello10-x"
      }
    },
    "JavascriptHello12DashxLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/dd-sls-plugin-integration-test-dev-JavascriptHello12-x"
      }
    },
    "JavascriptHello14DashxLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/dd-sls-plugin-integration-test-dev-JavascriptHello14-x"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dd-sls-plugin-integration-test",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dd-sls-plugin-integration-test-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dd-sls-plugin-integration-test-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "execute-api:ManageConnections"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:execute-api:*:*:*/@connections/*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "dd-sls-plugin-integration-test",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "PythonHello27LogGroupSubscription": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:lambda:us-east-1:000000000000:function:datadog-forwarder",
        "FilterPattern": "",
        "LogGroupName": {
          "Ref": "PythonHello27LogGroup"
        }
      }
    },
    "PythonHello36LogGroupSubscription": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:lambda:us-east-1:000000000000:function:datadog-forwarder",
        "FilterPattern": "",
        "LogGroupName": {
          "Ref": "PythonHello36LogGroup"
        }
      }
    },
    "PythonHello37LogGroupSubscription": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:lambda:us-east-1:000000000000:function:datadog-forwarder",
        "FilterPattern": "",
        "LogGroupName": {
          "Ref": "PythonHello37LogGroup"
        }
      }
    },
    "PythonHello38LogGroupSubscription": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:lambda:us-east-1:000000000000:function:datadog-forwarder",
        "FilterPattern": "",
        "LogGroupName": {
          "Ref": "PythonHello38LogGroup"
        }
      }
    },
    "JavascriptHello10DashxLogGroupSubscription": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:lambda:us-east-1:000000000000:function:datadog-forwarder",
        "FilterPattern": "",
        "LogGroupName": {
          "Ref": "JavascriptHello10DashxLogGroup"
        }
      }
    },
    "JavascriptHello12DashxLogGroupSubscription": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:lambda:us-east-1:000000000000:function:datadog-forwarder",
        "FilterPattern": "",
        "LogGroupName": {
          "Ref": "JavascriptHello12DashxLogGroup"
        }
      }
    },
    "JavascriptHello14DashxLogGroupSubscription": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:lambda:us-east-1:000000000000:function:datadog-forwarder",
        "FilterPattern": "",
        "LogGroupName": {
          "Ref": "JavascriptHello14DashxLogGroup"
        }
      }
    },
    "PythonHello27LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/dd-sls-plugin-integration-test/dev/XXXXXXXXXXXXX-XXXX-XX-XXXXX:XX:XX.XXXX/dd-sls-plugin-integration-test.zip"
        },
        "Handler": "datadog_lambda.handler.handler",
        "Runtime": "python2.7",
        "FunctionName": "dd-sls-plugin-integration-test-dev-PythonHello27",
        "MemorySize": 1024,
        "Timeout": 6,
        "Tags": [
          {
            "Key": "dd_sls_plugin",
            "Value": "vX.XX.X"
          },
          {
            "Key": "service",
            "Value": "dd-sls-plugin-integration-test"
          },
          {
            "Key": "env",
            "Value": "dev"
          }
        ],
        "Environment": {
          "Variables": {
            "DD_SITE": "datadoghq.com",
            "DD_LOG_LEVEL": "info",
            "DD_FLUSH_TO_LOG": true,
            "DD_TRACE_ENABLED": true,
            "DD_LOGS_INJECTION": true,
            "DD_SUBSCRIBE_TO_API_GATEWAY_LOGS": true,
            "DD_SUBSCRIBE_TO_HTTP_API_LOGS": true,
            "DD_SUBSCRIBE_TO_WEBSOCKET_LOGS": true,
            "DD_MERGE_XRAY_TRACES": false,
            "DD_LAMBDA_HANDLER": "py_handler.hello"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:464622532012:layer:Datadog-Python27:XXX"
        ]
      },
      "DependsOn": [
        "PythonHello27LogGroup"
      ]
    },
    "PythonHello36LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/dd-sls-plugin-integration-test/dev/XXXXXXXXXXXXX-XXXX-XX-XXXXX:XX:XX.XXXX/dd-sls-plugin-integration-test.zip"
        },
        "Handler": "datadog_lambda.handler.handler",
        "Runtime": "python3.6",
        "FunctionName": "dd-sls-plugin-integration-test-dev-PythonHello36",
        "MemorySize": 1024,
        "Timeout": 6,
        "Tags": [
          {
            "Key": "dd_sls_plugin",
            "Value": "vX.XX.X"
          },
          {
            "Key": "service",
            "Value": "dd-sls-plugin-integration-test"
          },
          {
            "Key": "env",
            "Value": "dev"
          }
        ],
        "Environment": {
          "Variables": {
            "DD_SITE": "datadoghq.com",
            "DD_LOG_LEVEL": "info",
            "DD_FLUSH_TO_LOG": true,
            "DD_TRACE_ENABLED": true,
            "DD_LOGS_INJECTION": true,
            "DD_SUBSCRIBE_TO_API_GATEWAY_LOGS": true,
            "DD_SUBSCRIBE_TO_HTTP_API_LOGS": true,
            "DD_SUBSCRIBE_TO_WEBSOCKET_LOGS": true,
            "DD_MERGE_XRAY_TRACES": false,
            "DD_LAMBDA_HANDLER": "py_handler.hello"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:464622532012:layer:Datadog-Python36:XXX"
        ]
      },
      "DependsOn": [
        "PythonHello36LogGroup"
      ]
    },
    "PythonHello37LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/dd-sls-plugin-integration-test/dev/XXXXXXXXXXXXX-XXXX-XX-XXXXX:XX:XX.XXXX/dd-sls-plugin-integration-test.zip"
        },
        "Handler": "datadog_lambda.handler.handler",
        "Runtime": "python3.7",
        "FunctionName": "dd-sls-plugin-integration-test-dev-PythonHello37",
        "MemorySize": 1024,
        "Timeout": 6,
        "Tags": [
          {
            "Key": "dd_sls_plugin",
            "Value": "vX.XX.X"
          },
          {
            "Key": "service",
            "Value": "dd-sls-plugin-integration-test"
          },
          {
            "Key": "env",
            "Value": "dev"
          }
        ],
        "Environment": {
          "Variables": {
            "DD_SITE": "datadoghq.com",
            "DD_LOG_LEVEL": "info",
            "DD_FLUSH_TO_LOG": true,
            "DD_TRACE_ENABLED": true,
            "DD_LOGS_INJECTION": true,
            "DD_SUBSCRIBE_TO_API_GATEWAY_LOGS": true,
            "DD_SUBSCRIBE_TO_HTTP_API_LOGS": true,
            "DD_SUBSCRIBE_TO_WEBSOCKET_LOGS": true,
            "DD_MERGE_XRAY_TRACES": false,
            "DD_LAMBDA_HANDLER": "py_handler.hello"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:464622532012:layer:Datadog-Python37:XXX"
        ]
      },
      "DependsOn": [
        "PythonHello37LogGroup"
      ]
    },
    "PythonHello38LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/dd-sls-plugin-integration-test/dev/XXXXXXXXXXXXX-XXXX-XX-XXXXX:XX:XX.XXXX/dd-sls-plugin-integration-test.zip"
        },
        "Handler": "datadog_lambda.handler.handler",
        "Runtime": "python3.8",
        "FunctionName": "dd-sls-plugin-integration-test-dev-PythonHello38",
        "MemorySize": 1024,
        "Timeout": 6,
        "Tags": [
          {
            "Key": "dd_sls_plugin",
            "Value": "vX.XX.X"
          },
          {
            "Key": "service",
            "Value": "dd-sls-plugin-integration-test"
          },
          {
            "Key": "env",
            "Value": "dev"
          }
        ],
        "Environment": {
          "Variables": {
            "DD_SITE": "datadoghq.com",
            "DD_LOG_LEVEL": "info",
            "DD_FLUSH_TO_LOG": true,
            "DD_TRACE_ENABLED": true,
            "DD_LOGS_INJECTION": true,
            "DD_SUBSCRIBE_TO_API_GATEWAY_LOGS": true,
            "DD_SUBSCRIBE_TO_HTTP_API_LOGS": true,
            "DD_SUBSCRIBE_TO_WEBSOCKET_LOGS": true,
            "DD_MERGE_XRAY_TRACES": false,
            "DD_LAMBDA_HANDLER": "py_handler.hello"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:464622532012:layer:Datadog-Python38:XXX"
        ]
      },
      "DependsOn": [
        "PythonHello38LogGroup"
      ]
    },
    "JavascriptHello10DashxLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/dd-sls-plugin-integration-test/dev/XXXXXXXXXXXXX-XXXX-XX-XXXXX:XX:XX.XXXX/dd-sls-plugin-integration-test.zip"
        },
        "Handler": "/opt/nodejs/node_modules/datadog-lambda-js/handler.handler",
        "Runtime": "nodejs10.x",
        "FunctionName": "dd-sls-plugin-integration-test-dev-JavascriptHello10-x",
        "MemorySize": 1024,
        "Timeout": 6,
        "Tags": [
          {
            "Key": "dd_sls_plugin",
            "Value": "vX.XX.X"
          },
          {
            "Key": "service",
            "Value": "dd-sls-plugin-integration-test"
          },
          {
            "Key": "env",
            "Value": "dev"
          }
        ],
        "Environment": {
          "Variables": {
            "DD_SITE": "datadoghq.com",
            "DD_LOG_LEVEL": "info",
            "DD_FLUSH_TO_LOG": true,
            "DD_TRACE_ENABLED": true,
            "DD_LOGS_INJECTION": true,
            "DD_SUBSCRIBE_TO_API_GATEWAY_LOGS": true,
            "DD_SUBSCRIBE_TO_HTTP_API_LOGS": true,
            "DD_SUBSCRIBE_TO_WEBSOCKET_LOGS": true,
            "DD_MERGE_XRAY_TRACES": false,
            "DD_LAMBDA_HANDLER": "js_handler.hello"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:464622532012:layer:Datadog-Node10-x:XXX"
        ]
      },
      "DependsOn": [
        "JavascriptHello10DashxLogGroup"
      ]
    },
    "JavascriptHello12DashxLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/dd-sls-plugin-integration-test/dev/XXXXXXXXXXXXX-XXXX-XX-XXXXX:XX:XX.XXXX/dd-sls-plugin-integration-test.zip"
        },
        "Handler": "/opt/nodejs/node_modules/datadog-lambda-js/handler.handler",
        "Runtime": "nodejs12.x",
        "FunctionName": "dd-sls-plugin-integration-test-dev-JavascriptHello12-x",
        "MemorySize": 1024,
        "Timeout": 6,
        "Tags": [
          {
            "Key": "dd_sls_plugin",
            "Value": "vX.XX.X"
          },
          {
            "Key": "service",
            "Value": "dd-sls-plugin-integration-test"
          },
          {
            "Key": "env",
            "Value": "dev"
          }
        ],
        "Environment": {
          "Variables": {
            "DD_SITE": "datadoghq.com",
            "DD_LOG_LEVEL": "info",
            "DD_FLUSH_TO_LOG": true,
            "DD_TRACE_ENABLED": true,
            "DD_LOGS_INJECTION": true,
            "DD_SUBSCRIBE_TO_API_GATEWAY_LOGS": true,
            "DD_SUBSCRIBE_TO_HTTP_API_LOGS": true,
            "DD_SUBSCRIBE_TO_WEBSOCKET_LOGS": true,
            "DD_MERGE_XRAY_TRACES": false,
            "DD_LAMBDA_HANDLER": "js_handler.hello"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:464622532012:layer:Datadog-Node12-x:XXX"
        ]
      },
      "DependsOn": [
        "JavascriptHello12DashxLogGroup"
      ]
    },
    "JavascriptHello14DashxLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/dd-sls-plugin-integration-test/dev/XXXXXXXXXXXXX-XXXX-XX-XXXXX:XX:XX.XXXX/dd-sls-plugin-integration-test.zip"
        },
        "Handler": "/opt/nodejs/node_modules/datadog-lambda-js/handler.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "dd-sls-plugin-integration-test-dev-JavascriptHello14-x",
        "MemorySize": 1024,
        "Timeout": 6,
        "Tags": [
          {
            "Key": "dd_sls_plugin",
            "Value": "vX.XX.X"
          },
          {
            "Key": "service",
            "Value": "dd-sls-plugin-integration-test"
          },
          {
            "Key": "env",
            "Value": "dev"
          }
        ],
        "Environment": {
          "Variables": {
            "DD_SITE": "datadoghq.com",
            "DD_LOG_LEVEL": "info",
            "DD_FLUSH_TO_LOG": true,
            "DD_TRACE_ENABLED": true,
            "DD_LOGS_INJECTION": true,
            "DD_SUBSCRIBE_TO_API_GATEWAY_LOGS": true,
            "DD_SUBSCRIBE_TO_HTTP_API_LOGS": true,
            "DD_SUBSCRIBE_TO_WEBSOCKET_LOGS": true,
            "DD_MERGE_XRAY_TRACES": false,
            "DD_LAMBDA_HANDLER": "js_handler.hello"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:sa-east-1:464622532012:layer:Datadog-Node14-x:XXX"
        ]
      },
      "DependsOn": [
        "JavascriptHello14DashxLogGroup"
      ]
    },
    "PythonHello27LambdaVersionXXXX": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PythonHello27LambdaFunction"
        },
        "CodeSha256": "XXXX"
      }
    },
    "PythonHello36LambdaVersionXXXX": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PythonHello36LambdaFunction"
        },
        "CodeSha256": "XXXX"
      }
    },
    "PythonHello37LambdaVersionXXXX": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PythonHello37LambdaFunction"
        },
        "CodeSha256": "XXXX"
      }
    },
    "PythonHello38LambdaVersionXXXX": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PythonHello38LambdaFunction"
        },
        "CodeSha256": "XXXX"
      }
    },
    "JavascriptHello10DashxLambdaVersionXXXX": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "JavascriptHello10DashxLambdaFunction"
        },
        "CodeSha256": "XXXX"
      }
    },
    "JavascriptHello12DashxLambdaVersionXXXX": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "JavascriptHello12DashxLambdaFunction"
        },
        "CodeSha256": "XXXX"
      }
    },
    "JavascriptHello14DashxLambdaVersionXXXX": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "JavascriptHello14DashxLambdaFunction"
        },
        "CodeSha256": "XXXX"
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-dd-sls-plugin-integration-test",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceUsers": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "users",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceUsersCreate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceUsers"
        },
        "PathPart": "create",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodUsersCreateGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceUsersCreate"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "PythonHello27LambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayMethodUsersCreatePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceUsersCreate"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "JavascriptHello10DashxLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayDeploymentxxxx": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodUsersCreateGet",
        "ApiGatewayMethodUsersCreatePost"
      ]
    },
    "PythonHello27LambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PythonHello27LambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "JavascriptHello10DashxLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "JavascriptHello10DashxLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ApiGatewayLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/api-gateway/dd-sls-plugin-integration-test-dev"
      }
    },
    "CustomApiGatewayAccountCloudWatchRole": {
      "Type": "Custom::ApiGatewayAccountRole",
      "Version": 1,
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDashresourceDashapigwDashcwDashroleLambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "IamRoleCustomResourcesLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dev",
                  "dd-sls-plugin-integration-test",
                  "custom-resources-lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn",
                        {
                          "Ref": "AWS::Partition"
                        },
                        "iam:",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "role/*"
                      ]
                    ]
                  },
                  "Action": [
                    "iam:AttachRolePolicy",
                    "iam:CreateRole",
                    "iam:ListAttachedRolePolicies",
                    "iam:PassRole"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn",
                        {
                          "Ref": "AWS::Partition"
                        },
                        "apigateway:*::/account"
                      ]
                    ]
                  },
                  "Action": [
                    "apigateway:GET",
                    "apigateway:PATCH"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/dd-sls-plugin-integration-test/dev/XXXXXXXXXXXXX-XXXX-XX-XXXXX:XX:XX.XXXX/dd-sls-plugin-integration-test.zip"
        },
        "FunctionName": "dd-sls-plugin-integration-test-dev-custom-resource-apigw-cw-role",
        "Handler": "apiGatewayCloudWatchRole/handler.handler",
        "MemorySize": 1024,
        "Runtime": "nodejs12.x",
        "Timeout": 180,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleCustomResourcesLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "IamRoleCustomResourcesLambdaExecution"
      ]
    },
    "WebsocketsApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-dd-sls-plugin-integration-test-websockets",
        "RouteSelectionExpression": "$request.body.action",
        "Description": "Serverless Websockets",
        "ProtocolType": "WEBSOCKET"
      }
    },
    "PythonHello27WebsocketsIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "PythonHello27LambdaFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        }
      }
    },
    "JavascriptHello10DashxWebsocketsIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "JavascriptHello10DashxLambdaFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        }
      }
    },
    "PythonHello27LambdaPermissionWebsockets": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WebsocketsApi",
        "PythonHello27LambdaFunction"
      ],
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PythonHello27LambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "JavascriptHello10DashxLambdaPermissionWebsockets": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WebsocketsApi",
        "JavascriptHello10DashxLambdaFunction"
      ],
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "JavascriptHello10DashxLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "SconnectWebsocketsRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "RouteKey": "$connect",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "JavascriptHello10DashxWebsocketsIntegration"
              }
            ]
          ]
        }
      }
    },
    "WebsocketsDeploymentStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "StageName": "dev",
        "Description": "Serverless Websockets",
        "AccessLogSettings": {
          "DestinationArn": {
            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${WebsocketsLogGroup}"
          },
          "Format": "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] \"$context.eventType $context.routeKey $context.connectionId\" $context.requestId"
        },
        "DefaultRouteSettings": {
          "DataTraceEnabled": true,
          "LoggingLevel": "INFO"
        },
        "DeploymentId": {
          "Ref": "WebsocketsDeploymentMyF6XDJP4uiCx2izd6DzYCSpXtJ6qKoX0mjnNdi2fc"
        }
      }
    },
    "WebsocketsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/websocket/dd-sls-plugin-integration-test-dev"
      }
    },
    "WebsocketsDeploymentMyF6XDJP4uiCx2izd6DzYCSpXtJ6qKoX0mjnNdi2fc": {
      "Type": "AWS::ApiGatewayV2::Deployment",
      "DependsOn": [
        "SconnectWebsocketsRoute",
        "SconnectWebsocketsRoute"
      ],
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "Description": "Serverless Websockets"
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-dd-sls-plugin-integration-test",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/http-api/dd-sls-plugin-integration-test-dev"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        },
        "AccessLogSettings": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "HttpApiLogGroup",
              "Arn"
            ]
          },
          "Format": "{\"requestId\":\"$context.requestId\",\"ip\":\"$context.identity.sourceIp\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"routeKey\":\"$context.routeKey\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
        }
      },
      "DependsOn": "HttpApiLogGroup"
    },
    "PythonHello27LambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PythonHello27LambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationPythonHello27": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "PythonHello27LambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRoutePutUsersUpdate": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "PUT /users/update",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationPythonHello27"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationPythonHello27"
    },
    "JavascriptHello10DashxLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "JavascriptHello10DashxLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationJavascriptHello10Dashx": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "JavascriptHello10DashxLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRouteDeleteUsersRemove": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "DELETE /users/remove",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationJavascriptHello10Dashx"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationJavascriptHello10Dashx"
    },
    "ApiGatewayLogGroupSubscription": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:lambda:us-east-1:000000000000:function:datadog-forwarder",
        "FilterPattern": "",
        "LogGroupName": {
          "Ref": "ApiGatewayLogGroup"
        }
      }
    },
    "ExecutionLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "API-Gateway-Execution-Logs_",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/",
              "dev"
            ]
          ]
        }
      }
    },
    "ExecutionLogGroupSubscription": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:lambda:us-east-1:000000000000:function:datadog-forwarder",
        "FilterPattern": "",
        "LogGroupName": {
          "Ref": "ExecutionLogGroup"
        }
      }
    },
    "WebsocketsLogGroupSubscription": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:lambda:us-east-1:000000000000:function:datadog-forwarder",
        "FilterPattern": "",
        "LogGroupName": {
          "Ref": "WebsocketsLogGroup"
        }
      }
    },
    "HttpApiLogGroupSubscription": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:lambda:us-east-1:000000000000:function:datadog-forwarder",
        "FilterPattern": "",
        "LogGroupName": {
          "Ref": "HttpApiLogGroup"
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-dd-sls-plugin-integration-test-dev-ServerlessDeploymentBucketName"
      }
    },
    "PythonHello27LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PythonHello27LambdaVersionXXXX"
      },
      "Export": {
        "Name": "sls-dd-sls-plugin-integration-test-dev-PythonHello27LambdaFunctionQualifiedArn"
      }
    },
    "PythonHello36LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PythonHello36LambdaVersionXXXX"
      },
      "Export": {
        "Name": "sls-dd-sls-plugin-integration-test-dev-PythonHello36LambdaFunctionQualifiedArn"
      }
    },
    "PythonHello37LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PythonHello37LambdaVersionXXXX"
      },
      "Export": {
        "Name": "sls-dd-sls-plugin-integration-test-dev-PythonHello37LambdaFunctionQualifiedArn"
      }
    },
    "PythonHello38LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PythonHello38LambdaVersionXXXX"
      },
      "Export": {
        "Name": "sls-dd-sls-plugin-integration-test-dev-PythonHello38LambdaFunctionQualifiedArn"
      }
    },
    "JavascriptHello10DashxLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "JavascriptHello10DashxLambdaVersionXXXX"
      },
      "Export": {
        "Name": "sls-dd-sls-plugin-integration-test-dev-JavascriptHello10DashxLambdaFunctionQualifiedArn"
      }
    },
    "JavascriptHello12DashxLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "JavascriptHello12DashxLambdaVersionXXXX"
      },
      "Export": {
        "Name": "sls-dd-sls-plugin-integration-test-dev-JavascriptHello12DashxLambdaFunctionQualifiedArn"
      }
    },
    "JavascriptHello14DashxLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "JavascriptHello14DashxLambdaVersionXXXX"
      },
      "Export": {
        "Name": "sls-dd-sls-plugin-integration-test-dev-JavascriptHello14DashxLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-dd-sls-plugin-integration-test-dev-ServiceEndpoint"
      }
    },
    "ServiceEndpointWebsocket": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "wss://",
            {
              "Ref": "WebsocketsApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-dd-sls-plugin-integration-test-dev-ServiceEndpointWebsocket"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-dd-sls-plugin-integration-test-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-dd-sls-plugin-integration-test-dev-HttpApiUrl"
      }
    }
  }
}