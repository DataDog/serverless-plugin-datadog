service: dd-sls-plugin-integration-test
frameworkVersion: "2"

plugins:
  - ../dist/src

provider:
  name: aws
  region: sa-east-1
  lambdaHashingVersion: 20201221
  layers:
    - { Ref: ProviderLevelLayerLambdaLayer }

custom:
  datadog:
    addExtension: true
    apiKey: 1234
    enableSourceCodeIntegration: false
    integrationTesting: true
    exclude:
      - ExcludeThis

functions:
  PythonHello27:
    handler: py_handler.hello
    runtime: python2.7
  PythonHello36:
    handler: py_handler.hello
    runtime: python3.6
  PythonHello37:
    handler: py_handler.hello
    runtime: python3.7
  PythonHello38:
    handler: py_handler.hello
    runtime: python3.8
  PythonHello39:
    handler: py_handler.hello
    runtime: python3.9
  JavascriptHello10-x:
    handler: js_handler.hello
    runtime: nodejs10.x
  JavascriptHello12-x:
    handler: js_handler.hello
    runtime: nodejs12.x
    layers:
      - { Ref: FunctionLevelLayerLambdaLayer }
  JavascriptHello14-x:
    handler: js_handler.hello
    runtime: nodejs14.x
  ExcludeThis:
    handler: js_handler.hello
    runtime: nodejs14.x
layers:
  ProviderLevelLayer:
    path: ProviderLevelLayer # required, path to layer contents on disk
    name: ${self:service}-${sls:stage}-ProviderLevelLayer # optional, Deployed Lambda layer name
    description: It's a text file # optional, Description to publish to AWS
    compatibleRuntimes: # optional, a list of runtimes this layer is compatible with
      - nodejs12.x
  FunctionLevelLayer:
    path: FunctionLevelLayer
    name: ${self:service}-${sls:stage}-FunctionLevelLayer # optional, Deployed Lambda layer name
    description: It's also a text file # optional, Description to publish to AWS
